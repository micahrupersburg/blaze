input {
  tcp {
    port => 4000
  }
}
filter {
  grok {
    key => "value"
    key => rawvalue
    key => [array, value, raw]
    key = [a][b]
    #pure-ftpd matching:
    match => ["message", "%{SYSLOGTIMESTAMP:syslog_timestamp}%{SPACE}%{SYSLOGHOST:logsource}.*\(%{USERNAME:ftp_username}@%{IP:ftp_remote_host}\)%{SPACE}\[NOTICE\]%{SPACE}%{PATH:ftp_file}%{SPACE}%{WORD:ftp_remote_action}%{SPACE}\(%{DATA:ftp_filesize},%{SPACE}%{DATA:ftp_transferspeed}\)"]
    match => ["message", "%{SYSLOGTIMESTAMP:syslog_timestamp}%{SPACE}%{SYSLOGHOST:logsource}.*\(.*%{IP:ftp_remote_host}\).*Authentication failed for user \[%{USERNAME:ftp_username}\]"]
    match => ["message", "%{SYSLOGTIMESTAMP:syslog_timestamp}%{SPACE}%{SYSLOGHOST:logsource}.*\(%{USERNAME:ftp_username}@%{IP:ftp_remote_host}\).*"]
    match => ["message", "%{SYSLOGTIMESTAMP:syslog_timestamp}%{SPACE}%{SYSLOGHOST:logsource}.*\(?@%{IP:ftp_remote_host}\).*\[user\]%{SPACE}\[%{USER:ftp_username}\].*"]
    match => ["message", "%{SYSLOGTIMESTAMP:syslog_timestamp}%{SPACE}%{SYSLOGHOST:logsource}.*\(?@%{IP:ftp_remote_host}\).*%{SPACE}"]
  }
}
output {
  stdout {

  }
}